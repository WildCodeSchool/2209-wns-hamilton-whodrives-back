type Trip {
  id: ID!
  departure_places: String
  destination: String
  date_departure: Date
  arrival_date: Date
  price: Int
  description: String
  hour_departure: String
  place_available: Int
  users: [User]
  passengers: [User!]!
}
type Query {
  getTripSearch(
    departure_places: String
    destination: String
    date_departure: Date
    arrival_date: Date
    price: Int
    description: String
    hour_departure: String
    place_available: Int
  ): [Trip]
  getTripSearchByHourRange(
    departure_places: String
    destination: String
    date_departure: Date
    arrival_date: Date
    price: Int
    description: String
    hour_departure: String
    place_available: Int
    minHour: String,
    maxHour: String,
  ): [Trip]
  getTrip(id: ID!): Trip
  getTrips: [Trip]
}
type Mutation {
  createTrip(
    departure_places: String
    destination: String
    date_departure: Date
    arrival_date: Date
    price: Int
    description: String
    hour_departure: String
    place_available: Int
  ): Trip
  updateTripPlace(
    id: ID!
    departure_places: String
    destination: String
    date_departure: Date
    arrival_date: Date
    price: Int
    description: String
    hour_departure: String
    place_available: Int
  ): Trip
  updateTrip(
    id: ID!
    departure_places: String
    destination: String
    date_departure: Date
    arrival_date: Date
    price: Int
    description: String
    hour_departure: String
    place_available: Int
  ): Trip
  
  deleteTrip(id: ID!): Trip
}



